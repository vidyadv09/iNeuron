USE DATABASE VIDYA;
SELECT * FROM SALES_DATA;

CREATE OR REPLACE TABLE SALES_DATA_COPY AS
SELECT * FROM SALES_DATA;

SELECT *FROM SALES_DATA_COPY;

DESCRIBE TABLE SALES_DATA_COPY;

-----SET PRIMARY KEY------------
create or replace TABLE VIDYA.PUBLIC.SALES_DATA_COPY (
	ORDER_ID VARCHAR(100) NOT NULL PRIMARY KEY,
	ORDER_DATE DATE,
	SHIP_DATE DATE,
	SHIP_MODE VARCHAR(100),
	CUSTOMER_NAME VARCHAR(100),
	SEGMENT VARCHAR(100),
	STATE VARCHAR(100),
	COUNTRY VARCHAR(100),
	MARKET VARCHAR(100),
	REGION VARCHAR(100),
	PRODUCT_ID VARCHAR(100),
	CATEGORY VARCHAR(100),
	SUB_CATEGORY VARCHAR(100),
	PRODUCT_NAME VARCHAR(100),
	SALES VARCHAR(100),
	QUANTITY NUMBER(38,0),
	DISCOUNT NUMBER(38,3),
	PROFIT NUMBER(38,5),
	SHIPPING_COST NUMBER(38,2),
	ORDER_PRIORITY VARCHAR(100),
	YEAR NUMBER(38,0)
);


-----CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE----

SELECT ORDER_DATE,
TO_DATE(ORDER_DATE,'DD-MM-YYYY') AS ORDER_DATE_NEW 
FROM SALES_DATA_COPY;

SELECT SHIP_DATE, 
TO_DATE(SHIP_DATE,'DD-MM-YYYY') AS SHIP_DATE_NEW FROM 
SALES_DATA_COPY;


-------EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT------


SELECT ORDER_ID, SUBSTR(ORDER_ID, CHARINDEX('-', ORDER_ID) +6) AS ORDER_ID_TYPE
FROM SALES_DATA_COPY;


-----FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID-----
SELECT DISCOUNT,
CASE
    WHEN DISCOUNT > 0 THEN 'YES'
    ELSE 'FALSE'
    END AS DISCOUNT_TYPE
FROM SALES_DATA_COPY;

----- FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID------

SELECT
sum(profit) AS PROFIT_FINAL
FROM SALES_DATA_COPY;


-----FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID-----

ALTER TABLE SALES_DATA_COPY
ADD DAYS_TAKEN VARCHAR(10);

UPDATE SALES_DATA_COPY
SET DAYS_TAKEN = DATEDIFF(DAY,TO_CHAR(TO_DATE(SHIP_DATE,'DD-MM-YYYY'),'YYYY-MM-DD') ,TO_CHAR(TO_DATE(ORDER_DATE,'DD-MM-YYYY'),'YYYY-MM-DD'));


-----FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID-----
SELECT *,
CASE
    WHEN DAYS_TAKEN <=3 THEN 5
    WHEN DAYS_TAKEN <=6 AND DAYS_TAKEN> 3 THEN 4
    WHEN DAYS_TAKEN <10 AND DAYS_TAKEN>6 THEN 3
    ELSE 2
    END AS ORDER_RATING
 FROM SALES_DATA_COPY;
